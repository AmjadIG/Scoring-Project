ggplot(data, aes(x = factor(confort), y = factor(count))) +
geom_bar()
library(ggplot2)
data <- structure(list(count = c(75, 163, 756), confort = c(Moins_Bon, Meilleur, Identique)))
ggplot(data, aes(x = factor(confort), y = factor(count))) +
geom_bar()
library(ggplot2)
Moins_Bon = 75
Meilleur = 163
Identique = 756
data <- structure(list(confort = c(Moins_Bon, Meilleur, Identique)))
ggplot(data, aes(x = confort, y = factor(confort))) +
geom_bar()
library(ggplot2)
Moins_Bon = 75
Meilleur = 163
Identique = 756
confort <- c(rep(c("MoinsBon", "Meilleur", "Identique")))
value <- c(rep(c(75, 163, 756)))
df <- data.frame(confort,value)
p <- qplot(confort, value, data = df, geom = "bar",     theme_set(theme_bw()))
p + geom_text(aes(label = value), size = 3, hjust = 0.5, vjust = 3, position =     "stack")
library(ggplot2)
Moins_Bon = 75
Meilleur = 163
Identique = 756
confort <- c(rep(c("MoinsBon", "Meilleur", "Identique")))
value <- c(rep(c(75, 163, 756)))
df <- data.frame(confort,value)
p <- qplot(confort, value, data = df, geom = "bar", theme_set(theme_bw())) + geom_text(aes(label = value), size = 3, hjust = 0.5, vjust = 3, position =     "stack")
library(ggplot2)
Moins_Bon = 75
Meilleur = 163
Identique = 756
confort <- c(rep(c("MoinsBon", "Meilleur", "Identique")))
value <- c(rep(c(75, 163, 756)))
df <- data.frame(confort,value)
p <- qplot(confort, value, data = df, geom = "bar", theme_set(theme_bw())) + geom_text(aes(label = value), size = 3, hjust = 0.5, vjust = 3, aes(position = "stack"))
library(ggplot2)
Moins_Bon = 75
Meilleur = 163
Identique = 756
confort <- c(rep(c("MoinsBon", "Meilleur", "Identique")))
value <- c(rep(c(75, 163, 756)))
df <- data.frame(confort,value)
p <- qplot(confort, value, data = df, geom = "bar", theme_set(theme_bw())) + geom_text(aes(label = value))
library(ggplot2)
Moins_Bon = 75
Meilleur = 163
Identique = 756
confort <- c(rep(c("MoinsBon", "Meilleur", "Identique")))
value <- c(rep(c(75, 163, 756)))
df <- data.frame(confort,value)
p <- qplot(confort, value, data = df, geom = "bar") + geom_text(aes(label = value))
library(ggplot2)
Moins_Bon = 75
Meilleur = 163
Identique = 756
confort <- c(rep(c("MoinsBon", "Meilleur", "Identique")))
value <- c(rep(c(75, 163, 756)))
df <- data.frame(confort,value)
p <- qplot(confort, value, data = df) + geom_bar() + geom_text(aes(label = value))
library(ggplot2)
Moins_Bon = 75
Meilleur = 163
Identique = 756
confort <- c(rep(c("MoinsBon", "Meilleur", "Identique")))
value <- c(rep(c(75, 163, 756)))
df <- data.frame(confort,value)
p <- geom_histogram(confort, value, data = df) + geom_bar() + geom_text(aes(label = value))
library(ggplot2)
Moins_Bon = 75
Meilleur = 163
Identique = 756
confort <- c(rep(c("MoinsBon", "Meilleur", "Identique")))
value <- c(rep(c(75, 163, 756)))
df <- data.frame(confort,value)
p <- geom_histogram(mapping = aes(x=confort, y= value), data = df, stat = "bin",
position = "stack") + geom_bar() + geom_text(aes(label = value))
library(ggplot2)
Moins_Bon = 75
Meilleur = 163
Identique = 756
confort <- c(rep(c("MoinsBon", "Meilleur", "Identique")))
value <- c(rep(c(75, 163, 756)))
df <- data.frame(confort,value)
p <- geom_histogram(mapping = aes(x=confort, y= value), data = df, stat = "bin",
position = "stack") + geom_bar()
library(ggplot2)
Moins_Bon = 75
Meilleur = 163
Identique = 756
confort <- c(rep(c("MoinsBon", "Meilleur", "Identique")))
value <- c(rep(c(75, 163, 756)))
df <- data.frame(confort,value)
p <- geom_histogram(mapping = aes(x=confort, y= value), data = df, stat = "bin", position = "stack")+
geom_bar()
library(ggplot2)
Moins_Bon = 75
Meilleur = 163
Identique = 756
confort <- c(rep(c("MoinsBon", "Meilleur", "Identique")))
value <- c(rep(c(75, 163, 756)))
df <- data.frame(confort,value)
p <- ggplot(mapping = aes(x=confort, y= value), data = df, stat = "bin", position = "stack")+
geom_bar()
library(ggplot2)
Moins_Bon = 75
Meilleur = 163
Identique = 756
confort <- c(rep(c("MoinsBon", "Meilleur", "Identique")))
value <- c(rep(c(75, 163, 756)))
df <- data.frame(confort,value)
p <- ggplot(mapping = aes(x=confort, y= value), data = df, stat = "bin", position = "stack")+
geom_bar()
library(ggplot2)
Moins_Bon = 75
Meilleur = 163
Identique = 756
confort <- c(rep(c("MoinsBon", "Meilleur", "Identique")))
value <- c(rep(c(75, 163, 756)))
df <- data.frame(confort,value)
ggplot(mapping = aes(x=confort, y= value), data = df, stat = "bin", position = "stack")+
geom_bar()
library(ggplot2)
#Moins_Bon = 75
#Meilleur = 163
#Identique = 756
#confort <- c(rep(c("", "", "")))
#value <- c(rep(c(75, 163, 756)))
#df <- data.frame(confort,value)
#ggplot(mapping = aes(x=confort, y=value), data = df, stat = "bin", position = "stack")+
#  geom_bar()
data_country <- data.frame(country = c("MoinsBon", "Meilleur", "Identique"),
conversion_rate = c(75,163, 756))
ggplot(data_country, aes(x=country,y = conversion_rate)) +geom_bar(stat = "identity")
library(ggplot2)
#Moins_Bon = 75
#Meilleur = 163
#Identique = 756
#confort <- c(rep(c("", "", "")))
#value <- c(rep(c(75, 163, 756)))
#df <- data.frame(confort,value)
#ggplot(mapping = aes(x=confort, y=value), data = df, stat = "bin", position = "stack")+
#  geom_bar()
data_country <- data.frame(country = c("MoinsBon", "Meilleur", "Identique"),
conversion_rate = c(75,163, 756))
ggplot(data_country, aes(x=country,y = conversion_rate)) +geom_bar(stat = "identity")
library(ggplot2)
#Moins_Bon = 75
#Meilleur = 163
#Identique = 756
#confort <- c(rep(c("", "", "")))
#value <- c(rep(c(75, 163, 756)))
#df <- data.frame(confort,value)
#ggplot(mapping = aes(x=confort, y=value), data = df, stat = "bin", position = "stack")+
#  geom_bar()
data_country <- data.frame(Confort = c("MoinsBon", "Meilleur", "Identique"),
count = c(75,163, 756))
ggplot(data_country, aes(x=Confort,y = count)) +geom_bar(stat = "identity")
library(ggplot2)
data_country <- data.frame(Confort = c("MoinsBon", "Meilleur", "Identique"),
count = c(75,163, 756))
ggplot(data_country, aes(x=Confort,y = count)) +geom_bar(stat = "identity" title = "Evolution du Confort des Motards entre 2011 et 2019")
library(ggplot2)
data_country <- data.frame(Confort = c("MoinsBon", "Meilleur", "Identique"),
count = c(75,163, 756))
ggplot(data_country, aes(x=Confort,y = count)) +geom_bar(stat = "identity", title = "Evolution du Confort des Motards entre 2011 et 2019")
library(ggplot2)
df <- data.frame(Confort = c("MoinsBon", "Meilleur", "Identique"),
count = c(75,163, 756))
ggplot(df, aes(x=Confort,y = count)) +geom_bar(stat = "identity")
library(ggplot2)
df <- data.frame(Confort = c("MoinsBon", "Meilleur", "Identique"),
count = c(75,163, 756))
ggplot(df, aes(x=Confort,y = count)) +geom_bar(stat = "identity")
print(imc)
imc=poids/taille^2
genre=c("F","H","F","H","H","H")
imc=poids/taille^2
poids=c(60,72,57,90,95,72)
taille=c(1.75,1.80,1.65,1.5,1.74,1.91)
genre=c("F","H","F","H","H","H")
imc=poids/taille^2
print(imc)
genre
genre
poids <- c(60,72,57,90,95,72)
taille <- c(1.75,1.80,1.65,1.5,1.74,1.91)
genre <- factor(c("F","H","F","H","H","H"))
imc=poids/taille^2
print(imc)
poids <- c(60,72,57,90,95,72)
taille <- c(1.75,1.80,1.65,1.5,1.74,1.91)
genre <- factor(c("F","H","F","H","H","H"))
imc <- poids/taille^2
imc
poids <- c(60,72,57,90,95,72)
taille <- c(1.75,1.80,1.65,1.5,1.74,1.91)
genre <- factor(c("F","H","F","H","H","H"))
imc <- poids/taille^2
imc
imc20 <- imc[imc>20]
poids <- c(60,72,57,90,95,72)
taille <- c(1.75,1.80,1.65,1.5,1.74,1.91)
genre <- factor(c("F","H","F","H","H","H"))
imc <- poids/taille^2
imc
imc20 <- imc[imc>20]
imc20
poids <- c(60,72,57,90,95,72)
taille <- c(1.75,1.80,1.65,1.5,1.74,1.91)
genre <- factor(c("F","H","F","H","H","H"))
imc <- poids/taille^2
imc
imc20 <- imc(imc>20)
imc20
poids <- c(60,72,57,90,95,72)
taille <- c(1.75,1.80,1.65,1.5,1.74,1.91)
genre <- factor(c("F","H","F","H","H","H"))
imc <- poids/taille^2
imc
imc20 <- imc[imc>20]
imc20
var <- length(poids)+length(taille)+length(imc)
mat <- matrix(data=poids:taille:imc,ncol=length(genre),nrow=var)
poids <- c(60,72,57,90,95,72)
taille <- c(1.75,1.80,1.65,1.5,1.74,1.91)
genre <- factor(c("F","H","F","H","H","H"))
imc <- poids/taille^2
imc
imc20 <- imc[imc>20]
imc20
var <- length(poids)+length(taille)+length(imc)
mat <- matrix(data=poids:taille:imc)
poids <- c(60,72,57,90,95,72)
taille <- c(1.75,1.80,1.65,1.5,1.74,1.91)
genre <- factor(c("F","H","F","H","H","H"))
imc <- poids/taille^2
imc
imc20 <- imc[imc>20]
imc20
mat <- cbind(poids,taille,imc)
mat
poids <- c(60,72,57,90,95,72)
taille <- c(1.75,1.80,1.65,1.5,1.74,1.91)
genre <- factor(c("F","H","F","H","H","H"))
imc <- poids/taille^2
imc
imc20 <- imc[imc>20]
imc20
mat <- rbind(poids,taille,imc)
mat
poids <- c(60,72,57,90,95,72)
taille <- c(1.75,1.80,1.65,1.5,1.74,1.91)
genre <- factor(c("F","H","F","H","H","H"))
imc <- poids/taille^2
imc
imc20 <- imc[imc>20]
imc20
mat <- cbind(poids,taille,imc)
mat
poids <- c(60,72,57,90,95,72)
taille <- c(1.75,1.80,1.65,1.5,1.74,1.91)
genre <- factor(c("F","H","F","H","H","H"))
imc <- poids/taille^2
imc
imc20 <- imc[imc>20]
imc20
mat <- cbind(poids,taille,imc)
mat
tab <- data.frame(mat)
poids <- c(60,72,57,90,95,72)
taille <- c(1.75,1.80,1.65,1.5,1.74,1.91)
genre <- factor(c("F","H","F","H","H","H"))
imc <- poids/taille^2
imc
imc20 <- imc[imc>20]
imc20
mat <- cbind(poids,taille,imc)
mat
tab <- data.frame(mat)
tab
poids <- c(60,72,57,90,95,72)
taille <- c(1.75,1.80,1.65,1.5,1.74,1.91)
genre <- factor(c("F","H","F","H","H","H"))
imc <- poids/taille^2
imc
imc20 <- imc[imc>20]
imc20
mat <- cbind(poids,taille,imc)
mat
tab <- data.frame(mat)
tab
str(mat)
str(tab)
class(mat)
class(tab)
mat <- cbind(poids,taille,imc)
mat
tab <- data.frame(mat)
tab
class(mat)
poids <- c(60,72,57,90,95,72)
taille <- c(1.75,1.80,1.65,1.5,1.74,1.91)
genre <- factor(c("F","H","F","H","H","H"))
imc <- poids/taille^2
imc
dir.create("/tpScoring")
imc20 <- imc[imc>20]
imc20
mat <- cbind(poids,taille,imc)
mat
tab <- data.frame(mat)
tab
str(mat)
str(tab)
save(poids,taille,genre,imc,imc20,mat,tab,file="tp0_bis.RData")
dir.create("Desktop/tpScoring")
save(poids,taille,genre,imc,imc20,mat,tab,file="tp0_bis.RData")
poids <- c(60,72,57,90,95,72)
taille <- c(1.75,1.80,1.65,1.5,1.74,1.91)
genre <- factor(c("F","H","F","H","H","H"))
imc <- poids/taille^2
imc
dir.create("Desktop/tpScoring")
imc20 <- imc[imc>20]
imc20
mat <- cbind(poids,taille,imc)
mat
tab <- data.frame(mat)
tab
str(mat)
str(tab)
save(poids,taille,genre,imc,imc20,mat,tab,file="tp0_bis.RData")
save(poids,taille,genre,imc,imc20,mat,tab,file="Desktop/tpScoring/tp0_bis.RData")
load(file = "Desktop/tpScoring/tp0_bis.RData")
load(file = "Desktop/tpScoring/tp0_bis.RData")
load(file = file.path("Desktop","tpScoring","tp0_bis.RData"))
ls()
ls()
mat <- matrix(cbind(poids,taille,imc))
str(mat)
iris
irisdata <- data(iris)
toupper(irisdata)
irisdata
iris$Species <- toupper(iris$Species)
str(iris)
iris$new <- ifelse(iris$Species == "SETOSA",1,2)
str(iris)
str(iris$new)
head(iris)
iris
irisP <- iris[iris$new == 1]
irisP <- subset(iris, iris$Species == "SETOSA")
irisP
write.table(x = irisP,file = file.path("Desktop","tpScoring","irisP.txt"))
save(irisP, file = file.path("Desktop","tpScoring","irisP.RData"))
read.table(file = file.path("Desktop","tpScoring","irisP.txt"))
read.table(file = file.path("Desktop","tpScoring","irisP.txt"))
read.table(file = file.path("Desktop","tpScoring","irisP.txt"))
load1 <- read.table(file = file.path("Desktop","tpScoring","irisP.txt"))
View(load1)
data(iris)
force(iris)
load2 <- load(file = file.path("Desktop","tpScoring","irisP.RData"))
View(irisP)
str(irisP)
table(iris$Species)
boxplot(iris$Sepal.Length)
boxplot(irisP$Sepal.Length)
virg <- subset(iris, iris$Species == "virginica")
setosa <- subset(iris, iris$Species == "setosa")
versi <- subset(iris, iris$Species == "versicolor")
boxplot(virg$Sepal.Length)
boxplot(setosa$Sepal.Length)
boxplot(versi$Sepal.Length)
boxplot(virg$Sepal.Length,setosa$Sepal.Length,versi$Sepal.Length)
boxplot(iris$Sepal.Length, iris$Species)
boxplot(iris$Sepal.Length, x=iris$Species)
boxplot(virg$Sepal.Length,setosa$Sepal.Length,versi$Sepal.Length)
# Comparatif boxplots
boxplot(iris$Sepal.Length ~ iris$Species, xlab = "Especes", ylab = "Taille des sépales")
# Comparatif boxplots
boxplot(iris$Sepal.Length ~ iris$Species, xlab = "Especes", ylab = "Taille des Sépales")
# Comparatif boxplots
boxplot(iris$Sepal.Length ~ iris$Species, xlab = "Especes", ylab = "Taille des Sépales")
summary(iris)
data_table <- read.table(file=file.path("Desktop","tpScoring","tp1_data","car_lab_data.csv"),header = TRUE, sep=";")
str(data_table)
cleandf <- data.frame(data_table)
str(cleandf)
cleandf
kmMoy <- sum(cleandf$Km)/length(cleandf$Km)
kmMoy
kmMoy2 <- mean(cleandf$Km)
kmMoy2
barplot(length(cleandf),cleandf$Marque)
barplot(cleandf$Marque)
barplot(height = cleandf,cleandf$Marque)
barplot(height = cleandf$Marque)
class(cleandf$Marque)
barplot(height = length(cleandf$Marque))
barplot(height = cleandf)
class(cleandf)
barplot(height = length(cleandf))
help("barplot")
# Exercice 1
data_table <- read.table(file=file.path("Desktop","tpScoring","tp1_data","car_lab_data.csv"),header = TRUE, sep=";")
str(data_table)
cars <- data.frame(data_table)
save(cars,file=file.path("Desktop","tpScoring","cars.RData"))
barplot(table(cars$Marque))
tapply(cars$Prix,cars$Marque,mean)
tapply(cars$Prix,cars$Marque,mean)
boxplot(cars$Prix,cars$Marque)
boxplot(cars$Prix,x = cars$Marque)
boxplot(cars$Marque)
help(boxplot)
boxplot(cars$Prix, subset(cars$Marque))
boxplot(cars$Prix~cars$Marque)
# Exercice 2
bank_waiting_times <- read.table("Desktop/tpScoring/tp1_data/bank_waiting_times.csv",header = TRUE, sep = ";")
class(bank_waiting_times)
# Exercice 2
waitTime <- read.table("Desktop/tpScoring/tp1_data/bank_waiting_times.csv",header = TRUE, sep = ";")
# Exercice 2
waitingTime <- read.table("Desktop/tpScoring/tp1_data/bank_waiting_times.csv",header = TRUE, sep = ";")
str(object = waitingTime)
moyWT <- mean(waitingTime$Temps)
moyWT
alyse = t.test(waitingTime, conf.level = 0.90)
(ana
analyse = t.test(waitingTime, conf.level = 0.90)
(analyse $conf.int[2]-analyse $conf.int[1])/2
analyse = t.test(waitingTime, conf.level = 0.90)
(analyse $conf.int[2]-analyse $conf.int[1])/2
varWT <- var(waitingTime$Temps)
varWT
n <- 26
quant <- qt(1-0.9/2, df=n-1)
borneSup <- moyWT + quant * sqrt(varWT/n)
borneInf <- moyWT- quant * sqrt(varWT/n)
borneSup
borneInf
quant <- qt(0.9/2, df=n-1)
borneSup <- moyWT + quant * sqrt(varWT/n)
borneInf <- moyWT- quant * sqrt(varWT/n)
borneSup
borneInf
quant <- qt(0.9/2, df=n-1)
borneSup <- moyWT + quant * sqrt(varWT/n)
borneInf <- moyWT- quant * sqrt(varWT/n)
borneSup
moyWT
varWT
quant
quant <- qt(1-0.1/2, df=n-1)
quant
borneSup <- moyWT + quant * sqrt(varWT/n)
borneInf <- moyWT- quant * sqrt(varWT/n)
borneSup
borneInf
t.test(waitingTime$Temps,mu = 4, conf.level = 0.9)
t.test(waitingTime$Temps,mu = 4, conf.level = 0.95)
data3 <- matrix(c(24,17,14,15,20,176,133,86,105,160), ncol = 2)
data3
chisq.test(data3)
ggplot(students) +
geom_boxplot(aes(factor(admit), gpa))
# Students dataset analysis
# Need to install ggplot2
# install.packages("ggplot2")
# Chargement de la librairie Ggplot2
library(ggplot2)
# Lecture du fichier csv
students <- read.csv(file = 'dataset/students.csv', sep = ";", header=TRUE)
head(students)
#class(students$admit) #integer => need to be a boolean
#class(students$gre) #integer
#class(students$gpa) #numeric
#class(students$rank) #integer
# Nuage de points
# ggplot(students, aes(x=gpa, y=gre)) +
#   geom_point(aes(color = admit, shape = rank)) +
#   theme_minimal()
###-- Boxplot --###
## GRE
ggplot(students) +
geom_boxplot(aes(factor(admit), gre))
students <- read.csv(file = 'dataset/students.csv', sep = ";", header=TRUE)
head(students)
students <- read.table(file = 'dataset/students.csv', sep = ";", header=TRUE)
head(students)
# Lecture du fichier csv
students <- read.table(file = "dataset/students.csv", sep = ";", header=TRUE)
# Chargement de la librairie Ggplot2
library(ggplot2)
setwd("~/Desktop/Scoring-Project")
# Lecture du fichier csv
students <- read.csv(file = 'dataset/students.csv', sep = ";", header=TRUE)
## GRE
ggplot(students) +
geom_boxplot(aes(factor(admit), gre))
## GPA
ggplot(students) +
geom_boxplot(aes(factor(admit), gpa))
## RANK
ggplot(students) +
geom_boxplot(aes(factor(admit), rank))
R --version
